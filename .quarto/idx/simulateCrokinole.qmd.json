{"title":"Simulate game of Crokinole","markdown":{"yaml":{"title":"Simulate game of Crokinole","format":{"html":{"resources":["shinylive-sw.js"]}},"filters":["shinylive"]},"containsRefs":false,"markdown":"\n\nThis is a *Shinylive application* that simulates a game of Crokinole and returns the results. You may specify the number of rounds to play by adjusting the slider. Note: currently round length = number of players.\n\n\n\n```{shinylive-python}\n#| standalone: true\n#| viewerHeight: 500\n#| layout: vertical\n\nfrom shiny import *\nimport pandas as pd\nimport numpy as np\nimport string\nfrom datetime import datetime, timezone\n\ndef createGame(spielerRunden = None):\n  if(spielerRunden == None):\n    maxRound = np.random.randint(2, 4)\n  else:\n    maxRound = spielerRunden\n  \n  rounds = list(range(1, maxRound+1)) * maxRound\n  rounds.sort()\n  \n  score = np.random.normal(143/4, 59/4, len(rounds))\n  score = np.round(score/5)*5\n  score = [0 if x < 0 else int(x) for x in score]\n  \n  names = np.random.choice(range(0,26), size = maxRound, replace = False)\n  player = [string.ascii_uppercase[i] for i in names]\n  \n  date = datetime.now(timezone.utc).strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\")\n  \n  def goals(i):\n    outcome = np.random.choice([\"self\", \"other\", None], size = maxRound, p = [0.4, 0.2, 0.4]).tolist()\n    hits = []\n    for j in outcome:\n      if(j == \"self\"):\n        hits.append(i)\n      elif(j == \"other\"):  \n        other = np.random.choice([x for x in player if x != i], size = 1).tolist()[0]\n        hits.append(other)\n      else:\n        hits.append(\"\")\n    return(hits) \n  playerHits = list(map(goals, player)) \n  \n  generics = [\"B\", \"R\", \"W\", \"S\"]\n  genericsList = np.repeat([generics[i] for i in range(0, len(player))], repeats = maxRound).tolist() \n    \n  df = pd.DataFrame({'id': genericsList, 'to': [j for i in playerHits for j in i]})\n  df[\"to\"] = pd.Categorical(df[\"to\"], categories = player)\n\n  \n  DFtwenties = df.groupby(\"to\").agg(\"sum\")\n  twenties = DFtwenties[\"id\"].tolist()\n  twenties = [str(element) if element != 0 else '' for element in twenties]\n  twenties.extend([\"\"]*(len(player)*(maxRound-1)))\n  twenties\n  \n  return {\"Game\": 1, \"Date\": date, \"Round\": rounds, \"Player\": player*maxRound,  \"Score\": score,  \"Twenties\": twenties}\n\ndef simulateGames(size = 4, spielerRunden = 4):\n    listDF = []\n    for i in range(0,size):\n        df = pd.DataFrame(createGame(spielerRunden = spielerRunden))\n        df[\"Game\"] = i+1\n        listDF.append(df)\n    sim = pd.concat(listDF, ignore_index=True)\n    return(sim)\n\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"Number of Rounds and Players\", 2, 4, 4),\n    ui.output_data_frame(\"simTable\"),\n    ui.download_button(\"download\", \"Download CSV\")\n)\n\ndef server(input, output, session):\n    @output\n    @render.data_frame\n    def simTable():\n        return render.DataGrid(\n            simData(),\n            row_selection_mode=\"multiple\",\n            width=\"100%\",\n            height=\"100%\",\n        )\n    \n    @reactive.Calc\n    def simData():\n      return simulateGames(size = 1, spielerRunden= int(input.n())\n      )\n\n    @session.download(filename=\"data.csv\")\n    def download():\n        yield simData().to_csv(index = False)\n\napp = App(app_ui, server)\n\n```","srcMarkdownNoYaml":"\n\nThis is a *Shinylive application* that simulates a game of Crokinole and returns the results. You may specify the number of rounds to play by adjusting the slider. Note: currently round length = number of players.\n\n\n\n```{shinylive-python}\n#| standalone: true\n#| viewerHeight: 500\n#| layout: vertical\n\nfrom shiny import *\nimport pandas as pd\nimport numpy as np\nimport string\nfrom datetime import datetime, timezone\n\ndef createGame(spielerRunden = None):\n  if(spielerRunden == None):\n    maxRound = np.random.randint(2, 4)\n  else:\n    maxRound = spielerRunden\n  \n  rounds = list(range(1, maxRound+1)) * maxRound\n  rounds.sort()\n  \n  score = np.random.normal(143/4, 59/4, len(rounds))\n  score = np.round(score/5)*5\n  score = [0 if x < 0 else int(x) for x in score]\n  \n  names = np.random.choice(range(0,26), size = maxRound, replace = False)\n  player = [string.ascii_uppercase[i] for i in names]\n  \n  date = datetime.now(timezone.utc).strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\")\n  \n  def goals(i):\n    outcome = np.random.choice([\"self\", \"other\", None], size = maxRound, p = [0.4, 0.2, 0.4]).tolist()\n    hits = []\n    for j in outcome:\n      if(j == \"self\"):\n        hits.append(i)\n      elif(j == \"other\"):  \n        other = np.random.choice([x for x in player if x != i], size = 1).tolist()[0]\n        hits.append(other)\n      else:\n        hits.append(\"\")\n    return(hits) \n  playerHits = list(map(goals, player)) \n  \n  generics = [\"B\", \"R\", \"W\", \"S\"]\n  genericsList = np.repeat([generics[i] for i in range(0, len(player))], repeats = maxRound).tolist() \n    \n  df = pd.DataFrame({'id': genericsList, 'to': [j for i in playerHits for j in i]})\n  df[\"to\"] = pd.Categorical(df[\"to\"], categories = player)\n\n  \n  DFtwenties = df.groupby(\"to\").agg(\"sum\")\n  twenties = DFtwenties[\"id\"].tolist()\n  twenties = [str(element) if element != 0 else '' for element in twenties]\n  twenties.extend([\"\"]*(len(player)*(maxRound-1)))\n  twenties\n  \n  return {\"Game\": 1, \"Date\": date, \"Round\": rounds, \"Player\": player*maxRound,  \"Score\": score,  \"Twenties\": twenties}\n\ndef simulateGames(size = 4, spielerRunden = 4):\n    listDF = []\n    for i in range(0,size):\n        df = pd.DataFrame(createGame(spielerRunden = spielerRunden))\n        df[\"Game\"] = i+1\n        listDF.append(df)\n    sim = pd.concat(listDF, ignore_index=True)\n    return(sim)\n\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"Number of Rounds and Players\", 2, 4, 4),\n    ui.output_data_frame(\"simTable\"),\n    ui.download_button(\"download\", \"Download CSV\")\n)\n\ndef server(input, output, session):\n    @output\n    @render.data_frame\n    def simTable():\n        return render.DataGrid(\n            simData(),\n            row_selection_mode=\"multiple\",\n            width=\"100%\",\n            height=\"100%\",\n        )\n    \n    @reactive.Calc\n    def simData():\n      return simulateGames(size = 1, spielerRunden= int(input.n())\n      )\n\n    @session.download(filename=\"data.csv\")\n    def download():\n        yield simData().to_csv(index = False)\n\napp = App(app_ui, server)\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["shinylive"],"output-file":"simulateCrokinole.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.515","title":"Simulate game of Crokinole","resources":["shinylive-sw.js"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}